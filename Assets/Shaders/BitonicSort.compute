#pragma kernel CSBitonicSort

struct ParticleHash {
    uint hash;
    uint index;
};

RWStructuredBuffer<ParticleHash> _Data;

uint _NumEntries;    // 总数量 (补充为 2^n)
int _Level;
int _LevelMask;

[numthreads(256, 1, 1)]
void CSBitonicSort(uint3 id : SV_DispatchThreadID)
{
    uint i_thread = id.x;
    
    uint K = 1u << (_Level - _LevelMask);

    uint i_mod_K = i_thread & (K - 1u);
    uint i_div_K = i_thread & ~(K - 1u);
    uint idx1 = ((i_div_K << 1u) + i_mod_K);
    uint idx2 = idx1 + K;
    
    if (idx2 >= _NumEntries) {
        return;
    }
    
    ParticleHash P_i = _Data[idx1];
    ParticleHash P_j = _Data[idx2];
    
    bool increasing = ((idx1 & (1u << (_Level + 1))) == 0);
    
    if ((P_i.hash > P_j.hash) == increasing)
    {
        _Data[idx1] = P_j;
        _Data[idx2] = P_i;
    }
}